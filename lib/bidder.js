var matcher = require('./placement_matcher');

module.exports = function(placement) {
  // use the matcher to search elasticsearch index
  
return  matcher(placement).then(function(response) {
    var winningAd = response.hits.hits[0];
    var runnerUp  = response.hits.hits[1];
    var winningAdMaxBid = winningAd._source.cpm;
    var winningAdQuality = winningAd._score / winningAdMaxBid
    
    /**
     * It is a second price auction, so the winning ad should pay just higher then the runner up.
     * 
     * The ad._score is the AdRank, used in ranking ads.
     * The ad._soucre.cpm is the maxBid this ad is willing to pay.
     * The original _score generated by elasticsearch is AdQuality. How matching is this ad with the incoming placement
     * The ad._score is calculated as follows: the original _score generated by elasticsearch * the cpm
     * 
     * To calculate how much the winningAd should cost: obtain AdQuality -> winningAd._score / winningAdMaxBid.
     * The winningAd should cost the least amount which will maintain its position. i.e. remains with the highest ad._score
     * So the price -> runnerUp.score / winningAdQuality, this price will make both the runnerUp and winningAd have the same _score
     * So price = price + 0.01
     *
     */
    winningAd._source['price']      = (runnerUp._score / winningAdQuality) + 0.01;
    winningAd._source['creativeId'] = winningAd._id;
    return winningAd._source;
  });

}
